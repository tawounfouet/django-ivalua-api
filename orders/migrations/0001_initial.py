# Generated by Django 5.2.1 on 2025-05-15 17:46

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('suppliers', '0003_alter_bankinginformation_updated_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the record was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated', verbose_name='updated at')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(help_text='Identifier in the external system', verbose_name='object ID')),
                ('ord_id_origin', models.PositiveIntegerField(help_text='Original order ID in the source system', verbose_name='origin ID')),
                ('order_code', models.CharField(help_text='Unique code identifier for the order (e.g., PO000001)', max_length=20, verbose_name='order code')),
                ('order_label', models.CharField(help_text='Label or description of the order', max_length=255, verbose_name='order label')),
                ('order_type_code', models.CharField(choices=[('default', 'Default'), ('blanket', 'Blanket order'), ('contract', 'Contract-based'), ('special', 'Special order')], default='default', help_text='Type classification of the order', max_length=20, verbose_name='order type')),
                ('ord_ext_code', models.CharField(blank=True, help_text='External reference code', max_length=50, verbose_name='external code')),
                ('ord_ref', models.CharField(blank=True, help_text='Reference number', max_length=50, verbose_name='reference')),
                ('basket_id', models.PositiveIntegerField(help_text='ID of the associated basket', verbose_name='basket ID')),
                ('order_sup_id', models.PositiveIntegerField(default=0, help_text='ID of the supplier in the external system', verbose_name='supplier ID')),
                ('order_sup_name', models.CharField(blank=True, help_text='Name of the supplier for display purposes', max_length=255, verbose_name='supplier name')),
                ('sup_nat_id', models.CharField(blank=True, help_text="Supplier's national identification number", max_length=30, verbose_name='national ID')),
                ('sup_nat_id_type', models.CharField(blank=True, help_text='Type of the national ID (e.g., SIRET, VAT)', max_length=2, verbose_name='national ID type')),
                ('created', models.DateField(blank=True, help_text='Date when the order was created', null=True, verbose_name='created date')),
                ('modified', models.DateField(blank=True, help_text='Date when the order was last modified', null=True, verbose_name='modified date')),
                ('login_created', models.CharField(blank=True, help_text='Username of who created the order', max_length=100, verbose_name='created by')),
                ('login_modified', models.CharField(blank=True, help_text='Username of who last modified the order', max_length=100, verbose_name='modified by')),
                ('status_code', models.CharField(choices=[('ini', 'Initial'), ('dra', 'Draft'), ('sub', 'Submitted'), ('app', 'Approved'), ('rej', 'Rejected'), ('sen', 'Sent to supplier'), ('ack', 'Acknowledged'), ('par', 'Partially received'), ('rec', 'Received'), ('can', 'Cancelled'), ('clo', 'Closed'), ('end', 'Terminated')], default='ini', help_text='Current status of the order', max_length=3, verbose_name='status')),
                ('status_label', models.CharField(blank=True, help_text='Descriptive label for the status', max_length=50, verbose_name='status label')),
                ('order_date', models.DateField(blank=True, help_text='Official date of the order', null=True, verbose_name='order date')),
                ('items_total_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total amount of all order items', max_digits=15, verbose_name='total amount')),
                ('currency_code', models.CharField(default='EUR', help_text='Currency code (e.g., EUR, USD)', max_length=3, verbose_name='currency')),
                ('comment', models.TextField(blank=True, help_text='Comments about the order', verbose_name='comment')),
                ('inco_code', models.CharField(blank=True, help_text='International Commercial Terms code', max_length=20, verbose_name='incoterm code')),
                ('inco_place', models.CharField(blank=True, help_text='Location specified in the Incoterm', max_length=100, verbose_name='incoterm place')),
                ('payterm_code', models.CharField(blank=True, help_text='Code for the payment terms', max_length=20, verbose_name='payment term code')),
                ('payterm_label', models.CharField(blank=True, help_text='Description of payment terms', max_length=100, verbose_name='payment term label')),
                ('payment_type_code', models.CharField(blank=True, help_text='Code for the payment type', max_length=20, verbose_name='payment type code')),
                ('payment_type_label', models.CharField(blank=True, help_text='Description of payment type', max_length=100, verbose_name='payment type label')),
                ('free_budget', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', help_text='Whether the order is free from budget constraints', max_length=3, verbose_name='free budget')),
                ('amendment_num', models.CharField(default='0', help_text='Sequential number of amendments to this order', max_length=10, verbose_name='amendment number')),
                ('track_timesheet', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', help_text='Whether the order requires timesheet tracking', max_length=3, verbose_name='track timesheet')),
                ('legal_comp_code', models.CharField(blank=True, help_text='Code of the legal company', max_length=20, verbose_name='legal company code')),
                ('legal_comp_legal_form', models.CharField(blank=True, help_text='Legal form of the company', max_length=50, verbose_name='legal form')),
                ('legal_comp_label', models.CharField(blank=True, help_text='Name of the legal company', max_length=100, verbose_name='legal company name')),
                ('orga_label', models.CharField(blank=True, help_text='Label of the organization', max_length=100, verbose_name='organization label')),
                ('orga_level', models.CharField(blank=True, help_text='Level of the organization (e.g., site, department)', max_length=20, verbose_name='organization level')),
                ('orga_node', models.CharField(blank=True, help_text='Organization node path', max_length=100, verbose_name='organization node')),
                ('supplier', models.ForeignKey(blank=True, help_text='Associated supplier record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='suppliers.supplier', verbose_name='supplier')),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the record was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated', verbose_name='updated at')),
                ('requester_firstname', models.CharField(blank=True, help_text='First name of the person requesting the order', max_length=100, verbose_name='requester first name')),
                ('requester_lastname', models.CharField(blank=True, help_text='Last name of the person requesting the order', max_length=100, verbose_name='requester last name')),
                ('requester_email', models.EmailField(blank=True, help_text='Email of the person requesting the order', max_length=254, verbose_name='requester email')),
                ('billing_firstname', models.CharField(blank=True, help_text='First name of the billing contact', max_length=100, verbose_name='billing contact first name')),
                ('billing_lastname', models.CharField(blank=True, help_text='Last name of the billing contact', max_length=100, verbose_name='billing contact last name')),
                ('billing_email', models.EmailField(blank=True, help_text='Email of the billing contact', max_length=254, verbose_name='billing contact email')),
                ('delivery_firstname', models.CharField(blank=True, help_text='First name of the delivery contact', max_length=100, verbose_name='delivery contact first name')),
                ('delivery_lastname', models.CharField(blank=True, help_text='Last name of the delivery contact', max_length=100, verbose_name='delivery contact last name')),
                ('delivery_email', models.EmailField(blank=True, help_text='Email of the delivery contact', max_length=254, verbose_name='delivery contact email')),
                ('supplier_firstname', models.CharField(blank=True, help_text='First name of the supplier contact', max_length=100, verbose_name='supplier contact first name')),
                ('supplier_lastname', models.CharField(blank=True, help_text='Last name of the supplier contact', max_length=100, verbose_name='supplier contact last name')),
                ('supplier_email', models.EmailField(blank=True, help_text='Email of the supplier contact', max_length=254, verbose_name='supplier contact email')),
                ('order', models.ForeignKey(help_text='Associated order', on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='orders.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'order contact',
                'verbose_name_plural': 'order contacts',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the record was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated', verbose_name='updated at')),
                ('item_id', models.PositiveIntegerField(help_text='ID of the item in the external system', verbose_name='item ID')),
                ('label', models.CharField(help_text='Description of the item', max_length=255, verbose_name='item description')),
                ('family_label', models.CharField(blank=True, help_text='Product family label', max_length=100, verbose_name='family label')),
                ('family_node', models.CharField(blank=True, help_text='Product family node reference', max_length=100, verbose_name='family node')),
                ('family_level', models.CharField(blank=True, help_text='Product family level', max_length=20, verbose_name='family level')),
                ('quantity', models.DecimalField(decimal_places=2, default=0.0, help_text='Quantity ordered', max_digits=15, verbose_name='quantity')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Total amount for this item', max_digits=15, verbose_name='total amount')),
                ('order', models.ForeignKey(help_text='Associated order', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'order item',
                'verbose_name_plural': 'order items',
            },
        ),
        migrations.CreateModel(
            name='OrderAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the record was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated', verbose_name='updated at')),
                ('type', models.CharField(choices=[('billing', 'Billing address'), ('delivery', 'Delivery address'), ('supplier', 'Supplier address')], help_text='Type of address (billing, delivery, etc.)', max_length=20, verbose_name='address type')),
                ('number', models.CharField(blank=True, help_text='Street number', max_length=10, verbose_name='street number')),
                ('name_complement', models.CharField(blank=True, help_text='Additional name information', max_length=100, verbose_name='name complement')),
                ('street', models.CharField(help_text='Street name', max_length=255, verbose_name='street')),
                ('street_complement', models.CharField(blank=True, help_text='Additional street information', max_length=100, verbose_name='street complement')),
                ('zip_code', models.CharField(help_text='Postal/ZIP code', max_length=20, verbose_name='ZIP code')),
                ('city', models.CharField(help_text='City name', max_length=100, verbose_name='city')),
                ('country_code', models.CharField(blank=True, help_text='ISO country code', max_length=2, verbose_name='country code')),
                ('country_label', models.CharField(blank=True, help_text='Country name', max_length=100, verbose_name='country')),
                ('order', models.ForeignKey(help_text='Associated order', on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='orders.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'order address',
                'verbose_name_plural': 'order addresses',
                'unique_together': {('order', 'type')},
            },
        ),
    ]
